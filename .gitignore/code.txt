package.json
{
"name": "tesla-clone",
"version": "0.1.0",
"private": true,
"scripts": {
"dev": "next dev",
"build": "next build",
"start": "next start",
"lint": "next lint"
},
"dependencies": {
"next": "14.0.0",
"react": "^18",
"react-dom": "^18"
},
"devDependencies": {
"eslint": "^8",
"eslint-config-next": "14.0.0"
}
}

next.config.js
const nextConfig = {
images: {
domains: ['res.cloudinary.com'],
},
}

module.exports = nextConfig

app/page.js
'use client';
import { useState, useEffect, useRef } from 'react';
import Header from './components/Header';
import Footer from './components/Footer';
import Hero from './components/Hero';
import VehicleShowcase from './components/VehicleShowcase';
import OffersSection from './components/OffersSection';

const heroData = [
{
title: "Model 3",
backgroundImage: "https://res.cloudinary.com/dqhawdcol/image/upload/v1761738221/z5g3hm11goe43buw3ec3.avif",
mobileBackgroundImage: "https://res.cloudinary.com/dqhawdcol/image/upload/v1761728713/vnv9jhbhut4sajs0d5xu.avif",
buttons: [
{ text: "Order Now", primary: true },
{ text: "Learn More", primary: false }
],
showSchedule: false
},
{
title: "Model Y",
subtitle: "Lease Prices Increase by up to $80/mo on Nov. 4",
backgroundImage: "https://res.cloudinary.com/dqhawdcol/image/upload/v1761738187/bpcah0gwcgevuzms8d2s.avif",
mobileBackgroundImage: "https://res.cloudinary.com/dqhawdcol/image/upload/v1761728713/fb2qr0nn0onpzlvmzs6o.avif",
buttons: [
{ text: "Order Now", primary: true },
{ text: "Learn More", primary: false }
],
showSchedule: false
},
{
title: "Cybertruck",
subtitle: "Lease From $699/mo",
linkText: "Lease Prices Increase by up to $80/mo on Nov. 4",
backgroundImage: "https://res.cloudinary.com/dqhawdcol/image/upload/v1761738184/uxkrrrw5uwbg3akvnnvr.avif",
mobileBackgroundImage: "https://res.cloudinary.com/dqhawdcol/image/upload/v1761728712/rckwee0mtzethxsuv6k3.avif",
buttons: [
{ text: "Order Now", primary: true },
{ text: "Learn More", primary: false }
],
showSchedule: false
}
];

const vehicleData = [
{
image: "https://res.cloudinary.com/dqhawdcol/image/upload/v1761844374/aleexjmf1y03f1fpyusi.avif",
preHeading: "Midsize SUV",
heading: "Model Y",
subtitle: "3.99% APR Available",
buttons: [
{ text: "Order Now", primary: true },
{ text: "Learn More", primary: false }
]
},
{
image: "https://res.cloudinary.com/dqhawdcol/image/upload/v1761844373/c2y0gqtykk0yjtspwy0z.avif",
preHeading: "Compact SUV",
heading: "Model X",
subtitle: "Lease from $699/mo",
buttons: [
{ text: "Order Now", primary: true },
{ text: "Learn More", primary: false }
]
},
{
image: "https://res.cloudinary.com/dqhawdcol/image/upload/v1761844373/tgrxrcexoficdqgh2bpx.avif",
preHeading: "Sedan",
heading: "Model S",
subtitle: "3.99% APR Available",
buttons: [
{ text: "Order Now", primary: true },
{ text: "Learn More", primary: false }
]
},
{
image: "https://res.cloudinary.com/dqhawdcol/image/upload/v1761844373/rmodukdnrdlivb2aurj9.avif",
preHeading: "Sports Car",
heading: "Roadster",
subtitle: "Coming Soon",
buttons: [
{ text: "Order Now", primary: true },
{ text: "Learn More", primary: false }
]
}
];

const offersData = [
{
heading: "Free Supercharging",
text: "Get free unlimited Supercharging when you take delivery of a new Model S or Model X by Dec 31.",
buttonText: "Learn More"
},
{
heading: "Solar & Powerwall",
text: "Power your home with solar and battery storage. Schedule a virtual consultation.",
buttonText: "Order Now"
}
];

export default function Home() {
const [currentSlide, setCurrentSlide] = useState(0);
const [currentVehicleSlide, setCurrentVehicleSlide] = useState(0);
const [isMobile, setIsMobile] = useState(false);
const touchStartX = useRef(0);
const touchEndX = useRef(0);

useEffect(() => {
const checkMobile = () => setIsMobile(window.innerWidth <= 768);
checkMobile();
window.addEventListener('resize', checkMobile);
return () => window.removeEventListener('resize', checkMobile);
}, []);

useEffect(() => {
const interval = setInterval(() => {
setCurrentSlide((prev) => (prev + 1) % heroData.length);
}, 5000);
return () => clearInterval(interval);
}, []);

useEffect(() => {
const interval = setInterval(() => {
setCurrentVehicleSlide((prev) => (prev + 1) % vehicleData.length);
}, 5000);
return () => clearInterval(interval);
}, []);

const handleTouchStart = (e) => {
touchStartX.current = e.touches[0].clientX;
};

const handleTouchMove = (e) => {
touchEndX.current = e.touches[0].clientX;
};

const handleTouchEnd = () => {
if (!touchStartX.current || !touchEndX.current) return;

const diff = touchStartX.current - touchEndX.current;
if (Math.abs(diff) > 50) {
if (diff > 0) {
setCurrentSlide((prev) => (prev + 1) % heroData.length);
} else {
setCurrentSlide((prev) => (prev - 1 + heroData.length) % heroData.length);
}
}
};

return (

<main> <Header /> <div onTouchStart={handleTouchStart} onTouchMove={handleTouchMove} onTouchEnd={handleTouchEnd} > {heroData.map((hero, index) => ( <Hero key={index} title={hero.title} subtitle={hero.subtitle} linkText={hero.linkText} backgroundImage={isMobile ? hero.mobileBackgroundImage : hero.backgroundImage} buttons={hero.buttons} showSchedule={hero.showSchedule} isActive={index === currentSlide} /> ))} </div> <div className="dots-container"> {heroData.map((_, index) => ( <button key={index} className={`dot ${index === currentSlide ? 'active' : ''}`} onClick={() => setCurrentSlide(index)} /> ))} </div> <VehicleShowcase vehicles={vehicleData} currentSlide={currentVehicleSlide} setCurrentSlide={setCurrentVehicleSlide} /> <OffersSection offers={offersData} /> <Footer /> </main> ); }

app/layout.js
import { Inter } from 'next/font/google'
import './globals.css'

const inter = Inter({ subsets: ['latin'] })

export const metadata = {
title: 'Tesla',
description: 'Tesla Clone',
}

export default function RootLayout({ children }) {
return (
<html lang="en">
<body className={inter.className}>{children}</body>
</html>
)
}

app/globals.css
* {
margin: 0;
padding: 0;
box-sizing: border-box;
}

body {
font-family: Arial, sans-serif;
background-color: #000;
color: #fff;
overflow-x: hidden;
}

.container {
max-width: 1300px;
margin: 0 auto;
padding: 0 20px;
}

.hero-section {
height: 80vh;
background-size: cover;
background-position: center;
display: flex;
flex-direction: column;
position: relative;
}

.header {
display: flex;
justify-content: space-between;
align-items: center;
padding: 15px 20px;
position: fixed;
top: 0;
left: 0;
right: 0;
z-index: 100;
background-color: #fff;
height: 70px;
}

.header.transparent {
background-color: transparent;
}

.logo {
width: 120px;
height: 24px;
}

.desktop-nav {
display: flex;
gap: 24px;
}

.mobile-nav {
display: none;
}

.nav-link {
color: #000;
text-decoration: none;
font-size: 12px;
font-weight: 500;
}

.nav-link:hover {
color: #666;
}

.utility-icons {
display: flex;
gap: 20px;
align-items: center;
}

.utility-icon {
background: none;
border: none;
color: #000;
cursor: pointer;
display: flex;
align-items: center;
justify-content: center;
position: relative;
}

.utility-icon:hover::after {
content: attr(data-tooltip);
position: absolute;
bottom: -30px;
left: 50%;
transform: translateX(-50%);
background: #000;
color: #fff;
padding: 8px 12px;
border-radius: 4px;
font-size: 12px;
white-space: nowrap;
}

.icon-svg {
width: 20px;
height: 20px;
}

.menu-btn {
background: rgba(255,255,255,0.2);
border: none;
color: #fff;
font-size: 14px;
cursor: pointer;
padding: 8px 16px;
border-radius: 4px;
backdrop-filter: blur(10px);
}

.hero-content {
flex: 1;
display: flex;
flex-direction: column;
justify-content: flex-start;
align-items: center;
text-align: center;
padding-top: 120px;
}

.hero-title {
font-size: 40px;
font-weight: bold;
margin-bottom: 10px;
}

.hero-subtitle {
font-size: 16px;
margin-bottom: 30px;
}

.cybertruck-link {
color: #fff;
text-decoration: underline;
cursor: pointer;
}

.cta-buttons {
display: flex;
gap: 20px;
margin-bottom: 30px;
}

.btn {
padding: 12px 60px;
border-radius: 4px;
font-size: 14px;
font-weight: 600;
cursor: pointer;
text-decoration: none;
transition: all 0.3s;
}

.btn-primary {
background-color: #3c6be1;
color: #fff;
border: none;
}

.btn-secondary {
background-color: #fff;
color: #000;
border: none;
}

.btn:hover {
opacity: 0.9;
}

.schedule-drive {
font-size: 14px;
text-decoration: underline;
cursor: pointer;
}

.footer {
padding: 40px 20px;
background-color: #fff;
color: #000;
}

.footer-content {
display: flex;
flex-direction: column;
align-items: center;
text-align: center;
gap: 20px;
}

.footer-links {
display: flex;
flex-wrap: wrap;
justify-content: center;
gap: 30px;
list-style: none;
font-size: 12px;
}

.footer-links li:first-child {
font-weight: bold;
}

.footer-links a {
color: #000;
text-decoration: none;
}

.footer-links a:hover {
color: #666;
}

.dots-container {
position: absolute;
bottom: 60px;
left: 50%;
transform: translateX(-50%);
display: flex;
gap: 10px;
z-index: 10;
}

.dot {
width: 10px;
height: 10px;
border-radius: 50%;
background-color: rgba(255,255,255,0.5);
cursor: pointer;
border: none;
}

.dot.active {
background-color: #fff;
}

.mobile-menu {
position: fixed;
top: 0;
left: 0;
right: 0;
bottom: 0;
background-color: #fff;
z-index: 1000;
padding: 20px;
display: none;
flex-direction: column;
}

.mobile-menu.active {
display: flex;
}

.mobile-menu-header {
display: flex;
justify-content: space-between;
align-items: center;
margin-bottom: 40px;
}

.close-menu {
background: none;
border: none;
color: #000;
font-size: 24px;
cursor: pointer;
}

.mobile-nav-links {
list-style: none;
display: flex;
flex-direction: column;
gap: 20px;
}

.mobile-nav-links a {
color: #000;
text-decoration: none;
font-size: 16px;
font-weight: 500;
}

.ask-question {
position: fixed;
bottom: 20px;
right: 20px;
background-color: #fff;
color: #000;
padding: 12px 16px;
border-radius: 50px;
font-size: 14px;
display: flex;
align-items: center;
gap: 8px;
cursor: pointer;
z-index: 90;
}

.vehicle-showcase {
background-color: #fff;
position: relative;
}

.vehicle-scroll-container {
display: flex;
height: 70vh;
overflow-x: auto;
scroll-snap-type: x mandatory;
scrollbar-width: none;
-ms-overflow-style: none;
gap: 20px;
padding: 0 80px 0 40px;
}

.vehicle-scroll-container::-webkit-scrollbar {
display: none;
}

.vehicle-card {
min-width: calc(90vw - 120px);
height: calc(100% - 60px);
margin: 30px 0;
scroll-snap-align: start;
background-size: cover;
background-position: center;
display: flex;
flex-direction: column;
justify-content: space-between;
padding: 80px 40px 40px;
position: relative;
border-radius: 12px;
overflow: hidden;
}

.vehicle-card::before {
content: '';
position: absolute;
top: 0;
left: 0;
right: 0;
bottom: 0;
background: linear-gradient(to bottom, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0) 50%, rgba(0,0,0,0.3) 100%);
}

.vehicle-content {
position: relative;
z-index: 2;
display: flex;
flex-direction: column;
height: 100%;
color: #fff;
text-align: left;
}

.vehicle-preheading {
font-size: 14px;
margin-bottom: auto;
}

.vehicle-bottom-content {
margin-top: auto;
}

.vehicle-heading {
font-size: 40px;
font-weight: bold;
margin-bottom: 8px;
}

.vehicle-subtitle {
font-size: 16px;
text-decoration: underline;
margin-bottom: 30px;
cursor: pointer;
}

.vehicle-buttons {
display: flex;
gap: 20px;
}

.vehicle-btn {
padding: 12px 80px;
border-radius: 4px;
font-size: 14px;
font-weight: 600;
cursor: pointer;
border: none;
flex: 1;
}

.vehicle-btn-primary {
background-color: #3c6be1;
color: #fff;
}

.vehicle-btn-secondary {
background-color: rgba(255,255,255,0.9);
color: #000;
}

.vehicle-btn:hover {
opacity: 0.9;
}

.vehicle-dots-container {
position: absolute;
bottom: 20px;
left: 50%;
transform: translateX(-50%);
display: flex;
gap: 10px;
z-index: 10;
}

.vehicle-dot {
width: 10px;
height: 10px;
border-radius: 50%;
background-color: rgba(0,0,0,0.3);
cursor: pointer;
border: none;
}

.vehicle-dot.active {
background-color: #000;
}

.offers-section {
background-color: #fff;
padding: 80px 0;
}

.offers-grid {
display: grid;
grid-template-columns: repeat(2, 1fr);
gap: 40px;
}

.offer-card {
background-color: #f4f4f4;
padding: 40px;
border-radius: 12px;
text-align: left;
}

.offer-heading {
font-size: 24px;
font-weight: bold;
color: #000;
margin-bottom: 16px;
}

.offer-text {
font-size: 16px;
color: #000;
margin-bottom: 24px;
line-height: 1.5;
}

.offer-btn {
background-color: #fff;
color: #000;
border: 1px solid #000;
padding: 12px 40px;
border-radius: 4px;
font-size: 14px;
font-weight: 600;
cursor: pointer;
text-decoration: none;
}

.offer-btn:hover {
background-color: #000;
color: #fff;
}

@media (min-width: 1024px) {
.vehicle-scroll-container {
padding: 0 100px 0 60px;
}

.vehicle-card {
min-width: calc(85vw - 160px);
}
}

@media (max-width: 768px) {
.desktop-nav {
display: none;
}

.utility-icons {
display: none;
}

.mobile-nav {
display: block;
}

.hero-section {
padding-top: 0;
}

.header {
background-color: transparent;
padding: 15px 10px;
}

.logo {
filter: brightness(0) invert(1);
}

.hero-content {
padding-top: 100px;
}

.cta-buttons {
flex-direction: row;
gap: 15px;
}

.hero-title {
font-size: 32px;
}

.footer-links {
flex-direction: column;
gap: 15px;
}

.vehicle-scroll-container {
height: 60vh;
gap: 15px;
padding: 0 20px;
}

.vehicle-card {
padding: 60px 20px 30px;
min-width: calc(100vw - 40px);
height: calc(100% - 30px);
margin: 15px 0;
}

.vehicle-heading {
font-size: 32px;
}

.vehicle-buttons {
flex-direction: row;
gap: 15px;
}

.vehicle-btn {
padding: 12px 40px;
}

.offers-grid {
grid-template-columns: 1fr;
gap: 20px;
}

.offer-card {
padding: 30px 20px;
}
}

@media (max-width: 480px) {
.hero-title {
font-size: 28px;
}

.btn {
padding: 12px 40px;
}

.vehicle-heading {
font-size: 28px;
}

.vehicle-buttons {
flex-wrap: nowrap;
}

.vehicle-btn {
padding: 12px 20px;
font-size: 12px;
}

.vehicle-scroll-container {
padding: 0 15px;
}

.vehicle-card {
min-width: calc(100vw - 30px);
padding: 50px 15px 25px;
}
}

app/components/Footer.js
export default function Footer() {
return (
<footer className="footer">
<div className="container">
<div className="footer-content">
<ul className="footer-links">
<li>Tesla © 2025</li>
<li><a href="#">Privacy & Legal</a></li>
<li><a href="#">Vehicle Recalls</a></li>
<li><a href="#">Contact</a></li>
<li><a href="#">News</a></li>
<li><a href="#">Get Updates</a></li>
<li><a href="#">Locations</a></li>
<li><a href="#">Learn</a></li>
</ul>
</div>
</div>
</footer>
);
}

app/components/Header.js
'use client';
import { useState, useEffect } from 'react';
import MobileMenu from './MobileMenu';

export default function Header() {
const [isMenuOpen, setIsMenuOpen] = useState(false);
const [isMobile, setIsMobile] = useState(false);

useEffect(() => {
const checkMobile = () => setIsMobile(window.innerWidth <= 768);
checkMobile();
window.addEventListener('resize', checkMobile);
return () => window.removeEventListener('resize', checkMobile);
}, []);

const toggleMenu = () => {
setIsMenuOpen(!isMenuOpen);
};

return (
<>
<header className={`header ${isMobile ? 'transparent' : ''}`}>
<img 
src="https://res.cloudinary.com/dqhawdcol/image/upload/v1761718553/xvtekklcntsfqyt2qtzp.png" 
alt="Tesla" 
className="logo"
/>

<nav className="desktop-nav">
<a href="#" className="nav-link">Vehicles</a>
<a href="#" className="nav-link">Energy</a>
<a href="#" className="nav-link">Charging</a>
<a href="#" className="nav-link">Discover</a>
<a href="#" className="nav-link">Shop</a>
</nav>

<div className="utility-icons">
<button className="utility-icon" data-tooltip="Support">
<svg class="icon-svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
<path d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z"/>
<path d="M9.09 9a3 3 0 015.83 1c0 2-3 3-3 3"/>
<line x1="12" y1="17" x2="12.01" y2="17"/>
</svg>
</button>
<button className="utility-icon" data-tooltip="Region & Language">
<svg class="icon-svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
<circle cx="12" cy="12" r="10"/>
<line x1="2" y1="12" x2="22" y2="12"/>
<path d="M12 2a15.3 15.3 0 014 10 15.3 15.3 0 01-4 10 15.3 15.3 0 01-4-10 15.3 15.3 0 014-10z"/>
</svg>
</button>
<button className="utility-icon" data-tooltip="Account">
<svg class="icon-svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
<path d="M20 21v-2a4 4 0 00-4-4H8a4 4 0 00-4 4v2"/>
<circle cx="12" cy="7" r="4"/>
</svg>
</button>
</div>

<div className="mobile-nav">
<button className="menu-btn" onClick={toggleMenu}>
Menu
</button>
</div>
</header>

<MobileMenu isOpen={isMenuOpen} onClose={toggleMenu} />
</>
);
} 

app/components/Hero.js
export default function Hero({ title, backgroundImage, buttons, showSchedule, isActive }) {
if (!isActive) return null;

return (
<section 
className="hero-section"
style={{ backgroundImage: `url(${backgroundImage})` }}
>
<div className="hero-content">
<h1 className="hero-title">{title}</h1>
<p className="hero-subtitle">Order Online for Touchless Delivery</p>

<div className="cta-buttons">
{buttons.map((button, index) => (
<button
key={index}
className={`btn ${button.primary ? 'btn-primary' : 'btn-secondary'}`}
>
{button.text}
</button>
))}
</div>

{showSchedule && (
<div className="schedule-drive">
Schedule a Drive Today
</div>
)}
</div>
</section>
);
}

app/components/MobileMenu.js
export default function MobileMenu({ isOpen, onClose }) {
return (
<div className={`mobile-menu ${isOpen ? 'active' : ''}`}>
<div className="mobile-menu-header">
<img 
src="https://res.cloudinary.com/dqhawdcol/image/upload/v1761718553/xvtekklcntsfqyt2qtzp.png" 
alt="Tesla" 
className="logo"
/>
<button className="close-menu" onClick={onClose}>
<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
<path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
</svg>
</button>
</div>

<ul className="mobile-nav-links">
<li><a href="#">Vehicles</a></li>
<li><a href="#">Energy</a></li>
<li><a href="#">Charging</a></li>
<li><a href="#">Discover</a></li>
<li><a href="#">Shop</a></li>
</ul>
</div>
);
}

app/components/VehicleShowcase.js
'use client';
import { useRef } from 'react';

export default function VehicleShowcase({ vehicles, currentSlide, setCurrentSlide }) {
const scrollContainerRef = useRef(null);
const touchStartX = useRef(0);
const touchEndX = useRef(0);

const handleTouchStart = (e) => {
touchStartX.current = e.touches[0].clientX;
};

const handleTouchMove = (e) => {
touchEndX.current = e.touches[0].clientX;
};

const handleTouchEnd = () => {
if (!touchStartX.current || !touchEndX.current) return;

const diff = touchStartX.current - touchEndX.current;
if (Math.abs(diff) > 50) {
if (diff > 0) {
setCurrentSlide((prev) => (prev + 1) % vehicles.length);
} else {
setCurrentSlide((prev) => (prev - 1 + vehicles.length) % vehicles.length);
}
const container = scrollContainerRef.current;
if (container) {
const scrollAmount = diff > 0 ? container.offsetWidth : -container.offsetWidth;
container.scrollBy({ left: scrollAmount, behavior: 'smooth' });
}
}
};

return (

<section className="vehicle-showcase"> <div ref={scrollContainerRef} className="vehicle-scroll-container" onTouchStart={handleTouchStart} onTouchMove={handleTouchMove} onTouchEnd={handleTouchEnd} > {vehicles.map((vehicle, index) => ( <div key={index} className="vehicle-card" style={{ backgroundImage: `url(${vehicle.image})` }} > <div className="vehicle-content"> <div className="vehicle-preheading">{vehicle.preHeading}</div> <div className="vehicle-bottom-content"> <h3 className="vehicle-heading">{vehicle.heading}</h3> <p className="vehicle-subtitle">{vehicle.subtitle}</p> <div className="vehicle-buttons"> {vehicle.buttons.map((button, btnIndex) => ( <button key={btnIndex} className={`vehicle-btn ${button.primary ? 'vehicle-btn-primary' : 'vehicle-btn-secondary'}`} > {button.text} </button> ))} </div> </div> </div> </div> ))} </div> <div className="vehicle-dots-container"> {vehicles.map((_, index) => ( <button key={index} className={`vehicle-dot ${index === currentSlide ? 'active' : ''}`} onClick={() => { setCurrentSlide(index); const container = scrollContainerRef.current; if (container) { container.scrollTo({ left: index * container.offsetWidth, behavior: 'smooth' }); } }} /> ))} </div> </section> ); }

app/components/OffersSection.js
export default function OffersSection({ offers }) {
return (

<section className="offers-section"> <div className="container"> <div className="offers-grid"> {offers.map((offer, index) => ( <div key={index} className="offer-card"> <h3 className="offer-heading">{offer.heading}</h3> <p className="offer-text">{offer.text}</p> <button className="offer-btn">{offer.buttonText}</button> </div> ))} </div> </div> </section> ); }
